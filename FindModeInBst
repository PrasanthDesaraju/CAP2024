class Solution {
    List<Integer> list = new ArrayList<>();
    public List<Integer> inord(TreeNode root){
        if (root == null) return list;
        inord(root.left);
        list.add(root.val);
        inord(root.right);
        return list;
    }
    public int[] findMode(TreeNode root) {
        inord(root);
        HashMap<Integer, Integer> map = new HashMap<>();
        for(int i=0; i<list.size(); i++){
            int num1 = map.getOrDefault(list.get(i),0);
            num1+=1;
            map.put(list.get(i),num1);
        }
        int max=0;
        for (Map.Entry<Integer, Integer> entry : map.entrySet()) {
            max = Math.max(max,entry.getValue());
        }
        List<Integer> list2 = new ArrayList<>();
        for(Map.Entry<Integer, Integer> entry : map.entrySet()) {
            if (entry.getValue() == max){
                list2.add(entry.getKey());
            }
        }
        int[] res = new int[list2.size()];
        for(int i=0; i<res.length; i++){
            res[i] = list2.get(i);
        }
        return res;
    }
}
